{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchSchedules = createAsyncThunk('schedules/fetchSchedules', async () => {\n  const response = await axios.get('/associates/schedules');\n  return response.data;\n});\nconst schedulesSlice = createSlice({\n  name: 'schedules',\n  initialState: {\n    data: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchSchedules.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchSchedules.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.data = action.payload;\n    }).addCase(fetchSchedules.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default schedulesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchSchedules","response","get","data","schedulesSlice","name","initialState","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/features/schedulesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchSchedules = createAsyncThunk(\n    'schedules/fetchSchedules',\n    async () => {\n        const response = await axios.get('/associates/schedules');\n        return response.data;\n    }\n);\n\nconst schedulesSlice = createSlice({\n    name: 'schedules',\n    initialState: { data: [], status: 'idle', error: null },\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchSchedules.pending, (state) => {\n                state.status = 'loading';\n            })\n            .addCase(fetchSchedules.fulfilled, (state, action) => {\n                state.status = 'succeeded';\n                state.data = action.payload;\n            })\n            .addCase(fetchSchedules.rejected, (state, action) => {\n                state.status = 'failed';\n                state.error = action.error.message;\n            });\n    }\n});\n\nexport default schedulesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAC1C,0BAA0B,EAC1B,YAAY;EACR,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,uBAAuB,CAAC;EACzD,OAAOD,QAAQ,CAACE,IAAI;AACxB,CACJ,CAAC;AAED,MAAMC,cAAc,GAAGP,WAAW,CAAC;EAC/BQ,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IAAEH,IAAI,EAAE,EAAE;IAAEI,MAAM,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAK,CAAC;EACvDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACZ,cAAc,CAACa,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDK,OAAO,CAACZ,cAAc,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACX,IAAI,GAAGa,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACZ,cAAc,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAef,cAAc,CAACgB,OAAO"},"metadata":{},"sourceType":"module"}