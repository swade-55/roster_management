{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociatesTable.js\",\n  _s = $RefreshSig$();\n// AssociatesTable.js\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAssociates } from '../features/schedulesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssociatesTable = () => {\n  _s();\n  const dispatch = useDispatch();\n  const associates = useSelector(state => state.schedules.associates);\n\n  // Simulate fetching data and storing it in Redux\n  React.useEffect(() => {\n    // Fetch the data from your Flask API\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5555/associates_working_days'); // Update with your Flask API endpoint\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        dispatch(setAssociates(data));\n      } catch (error) {\n        console.error(\"Fetching data error:\", error);\n      }\n    };\n    fetchData();\n  }, [dispatch]);\n\n  // Create a set of all days\n  const allDays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Associate Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), allDays.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: associates.map(associate => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: associate.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), allDays.map(day => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: associate.working_days.includes(day) ? '✓' : ''\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))]\n      }, associate.associate_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AssociatesTable, \"TLAk+zTmOQllEGYZ3AnLH1P7Zeg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AssociatesTable;\nexport default AssociatesTable;\nvar _c;\n$RefreshReg$(_c, \"AssociatesTable\");","map":{"version":3,"names":["React","useSelector","useDispatch","setAssociates","jsxDEV","_jsxDEV","AssociatesTable","_s","dispatch","associates","state","schedules","useEffect","fetchData","response","fetch","ok","Error","status","data","json","error","console","allDays","children","fileName","_jsxFileName","lineNumber","columnNumber","map","day","associate","name","working_days","includes","associate_id","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociatesTable.js"],"sourcesContent":["// AssociatesTable.js\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAssociates } from '../features/schedulesSlice';\n\nconst AssociatesTable = () => {\n  const dispatch = useDispatch();\n  const associates = useSelector((state) => state.schedules.associates);\n\n  // Simulate fetching data and storing it in Redux\n  React.useEffect(() => {\n    // Fetch the data from your Flask API\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5555/associates_working_days'); // Update with your Flask API endpoint\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        dispatch(setAssociates(data));\n      } catch (error) {\n        console.error(\"Fetching data error:\", error);\n      }\n    };\n\n    fetchData();\n  }, [dispatch]);\n\n  // Create a set of all days\n  const allDays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Associate Name</th>\n          {allDays.map((day) => (\n            <th key={day}>{day}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {associates.map((associate) => (\n          <tr key={associate.associate_id}>\n            <td>{associate.name}</td>\n            {allDays.map((day) => (\n              <td key={day}>{associate.working_days.includes(day) ? '✓' : ''}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default AssociatesTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}