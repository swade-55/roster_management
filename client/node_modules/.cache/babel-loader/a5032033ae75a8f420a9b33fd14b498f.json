{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/ScheduleForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postSchedule } from '../features/scheduleBuildSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScheduleForm() {\n  _s();\n  const dispatch = useDispatch();\n\n  // Define states for each day's demand\n  const [mondayDemand, setMondayDemand] = useState(20);\n  const [tuesdayDemand, setTuesdayDemand] = useState(20);\n  const [wednesdayDemand, setWednesdayDemand] = useState(20);\n  const [thursdayDemand, setThursdayDemand] = useState(20);\n  const [fridayDemand, setFridayDemand] = useState(20);\n\n  // Construct df_staff based on the states\n  const df_staff = {\n    'Day': ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n    'Demand': [mondayDemand, tuesdayDemand, wednesdayDemand, thursdayDemand, fridayDemand]\n  };\n\n  // Dispatch the postSchedule action\n  dispatch(postSchedule(df_staff));\n\n  // Use useSelector to access the response data from the Redux store\n  const scheduleData = useSelector(state => state.schedule.data);\n  const scheduleStatus = useSelector(state => state.schedule.status);\n  const scheduleError = useSelector(state => state.schedule.error);\n\n  // Render the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [scheduleStatus === 'loading' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 46\n    }, this), scheduleStatus === 'succeeded' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(scheduleData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 48\n    }, this), scheduleStatus === 'failed' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", scheduleError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(ScheduleForm, \"z1tuGqDMI/8cbrRokuK4HCntKlM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = ScheduleForm;\nexport default ScheduleForm;\nvar _c;\n$RefreshReg$(_c, \"ScheduleForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","postSchedule","jsxDEV","_jsxDEV","ScheduleForm","_s","dispatch","mondayDemand","setMondayDemand","tuesdayDemand","setTuesdayDemand","wednesdayDemand","setWednesdayDemand","thursdayDemand","setThursdayDemand","fridayDemand","setFridayDemand","df_staff","scheduleData","state","schedule","data","scheduleStatus","status","scheduleError","error","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/ScheduleForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postSchedule } from '../features/scheduleBuildSlice';\n\nfunction ScheduleForm() {\n    const dispatch = useDispatch();\n\n    // Define states for each day's demand\n    const [mondayDemand, setMondayDemand] = useState(20);\n    const [tuesdayDemand, setTuesdayDemand] = useState(20);\n    const [wednesdayDemand, setWednesdayDemand] = useState(20);\n    const [thursdayDemand, setThursdayDemand] = useState(20);\n    const [fridayDemand, setFridayDemand] = useState(20);\n\n    // Construct df_staff based on the states\n    const df_staff = {\n        'Day': ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n        'Demand': [mondayDemand, tuesdayDemand, wednesdayDemand, thursdayDemand, fridayDemand]\n    };\n\n    // Dispatch the postSchedule action\n    dispatch(postSchedule(df_staff));\n\n    // Use useSelector to access the response data from the Redux store\n    const scheduleData = useSelector(state => state.schedule.data);\n    const scheduleStatus = useSelector(state => state.schedule.status);\n    const scheduleError = useSelector(state => state.schedule.error);\n\n    // Render the component\n    return (\n        <div>\n            {/* Display the schedule data, status, or error message */}\n            {scheduleStatus === 'loading' && <div>Loading...</div>}\n            {scheduleStatus === 'succeeded' && <div>{JSON.stringify(scheduleData)}</div>}\n            {scheduleStatus === 'failed' && <div>Error: {scheduleError}</div>}\n        </div>\n    );\n}\n\nexport default ScheduleForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMmB,QAAQ,GAAG;IACb,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,CAAC;IAC/D,QAAQ,EAAE,CAACV,YAAY,EAAEE,aAAa,EAAEE,eAAe,EAAEE,cAAc,EAAEE,YAAY;EACzF,CAAC;;EAED;EACAT,QAAQ,CAACL,YAAY,CAACgB,QAAQ,CAAC,CAAC;;EAEhC;EACA,MAAMC,YAAY,GAAGlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC;EAC9D,MAAMC,cAAc,GAAGtB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACG,MAAM,CAAC;EAClE,MAAMC,aAAa,GAAGxB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACK,KAAK,CAAC;;EAEhE;EACA,oBACItB,OAAA;IAAAuB,QAAA,GAEKJ,cAAc,KAAK,SAAS,iBAAInB,OAAA;MAAAuB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACrDR,cAAc,KAAK,WAAW,iBAAInB,OAAA;MAAAuB,QAAA,EAAMK,IAAI,CAACC,SAAS,CAACd,YAAY;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC3ER,cAAc,KAAK,QAAQ,iBAAInB,OAAA;MAAAuB,QAAA,GAAK,SAAO,EAACF,aAAa;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd;AAACzB,EAAA,CAjCQD,YAAY;EAAA,QACAL,WAAW,EAmBPC,WAAW,EACTA,WAAW,EACZA,WAAW;AAAA;AAAAiC,EAAA,GAtB5B7B,YAAY;AAmCrB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}