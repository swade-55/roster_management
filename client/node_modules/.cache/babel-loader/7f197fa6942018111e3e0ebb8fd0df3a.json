{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociateRoster.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport AssociateCard from \"./AssociateCard\";\nimport { Card } from \"semantic-ui-react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteWorker } from '../features/workersSlice';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssociateRoster() {\n  _s();\n  const dispatch = useDispatch();\n  const workers = useSelector(state => state.workers);\n  const handleDelete = workerId => {\n    dispatch(deleteWorker(workerId));\n  };\n  const stickyHeaderStyle = {\n    position: 'sticky',\n    top: '0',\n    backgroundColor: 'white',\n    zIndex: '10',\n    boxShadow: '0 2px 2px -1px rgba(0,0,0,0.4)',\n    padding: '10px'\n  };\n  const selectors = workers.workers.filter(selector => selector.jobclass_id === 1);\n  const selectorList = selectors.map(selector => {\n    return /*#__PURE__*/_jsxDEV(AssociateCard, {\n      worker: selector,\n      handleDelete: handleDelete\n    }, selector.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this);\n  });\n  const putForks = workers.filter(forklift => forklift.job_class_id === 2);\n  const putForkCards = putForks.map(forklift => {\n    return /*#__PURE__*/_jsxDEV(AssociateCard, {\n      worker: forklift,\n      handleDelete: handleDelete\n    }, forklift.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  });\n  // const letForks = workers.filter(forklift=>forklift.job_class==='Letdown Forklift')\n  // const letForkCards = letForks.map(forklift=>{\n  //   return <AssociateCard key={forklift.id} worker={forklift} handleDelete={handleDelete}/>\n  // })\n  // const loaders = workers.filter(loader=>loader.job_class==='Loader')\n  // const loaderCards = loaders.map(loader=>{\n  //   return <AssociateCard key={loader.id} worker={loader} handleDelete={handleDelete}/>\n  // })\n  // const receivers = workers.filter(worker=>worker.job_class==='Receiver')\n  // const receiverCards = receivers.map(receiver=>{\n  //   return <AssociateCard key={receiver.id} worker={receiver} handleDelete={handleDelete}/>\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: stickyHeaderStyle,\n      children: \"Selectors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n      itemsPerRow: 4,\n      children: selectorList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(AssociateRoster, \"0FnBNVi8NP9yKuecl1xu9VT23QM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AssociateRoster;\nexport default AssociateRoster;\nvar _c;\n$RefreshReg$(_c, \"AssociateRoster\");","map":{"version":3,"names":["React","AssociateCard","Card","useDispatch","useSelector","deleteWorker","Header","jsxDEV","_jsxDEV","AssociateRoster","_s","dispatch","workers","state","handleDelete","workerId","stickyHeaderStyle","position","top","backgroundColor","zIndex","boxShadow","padding","selectors","filter","selector","jobclass_id","selectorList","map","worker","id","fileName","_jsxFileName","lineNumber","columnNumber","putForks","forklift","job_class_id","putForkCards","children","style","Group","itemsPerRow","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociateRoster.js"],"sourcesContent":["import React from \"react\";\nimport AssociateCard from \"./AssociateCard\";\nimport { Card } from \"semantic-ui-react\";\nimport {useDispatch,useSelector} from 'react-redux'\nimport {deleteWorker} from '../features/workersSlice'\nimport Header from './Header';\n\nfunction AssociateRoster() {\n  const dispatch = useDispatch();\n  const workers = useSelector((state) => state.workers);\n  const handleDelete = (workerId)=>{\n    dispatch(deleteWorker(workerId))\n  }\n\n  const stickyHeaderStyle = {\n    position: 'sticky',\n    top: '0', \n    backgroundColor: 'white', \n    zIndex: '10', \n    boxShadow: '0 2px 2px -1px rgba(0,0,0,0.4)', \n    padding: '10px', \n  };\n\n\n  const selectors = workers.workers.filter(selector=>selector.jobclass_id===1)\n  const selectorList = selectors.map(selector=>{\n         return <AssociateCard key = {selector.id} worker={selector} handleDelete={handleDelete}/>\n     })\n  const putForks = workers.filter(forklift=>forklift.job_class_id===2)\n  const putForkCards = putForks.map(forklift=>{\n     return <AssociateCard key = {forklift.id} worker={forklift} handleDelete={handleDelete}/>\n   })\n  // const letForks = workers.filter(forklift=>forklift.job_class==='Letdown Forklift')\n  // const letForkCards = letForks.map(forklift=>{\n  //   return <AssociateCard key={forklift.id} worker={forklift} handleDelete={handleDelete}/>\n  // })\n  // const loaders = workers.filter(loader=>loader.job_class==='Loader')\n  // const loaderCards = loaders.map(loader=>{\n  //   return <AssociateCard key={loader.id} worker={loader} handleDelete={handleDelete}/>\n  // })\n  // const receivers = workers.filter(worker=>worker.job_class==='Receiver')\n  // const receiverCards = receivers.map(receiver=>{\n  //   return <AssociateCard key={receiver.id} worker={receiver} handleDelete={handleDelete}/>\n  // })\n\n\n\n  return (\n    <div>\n    <h2 style={stickyHeaderStyle}>Selectors</h2>\n    <Header/>\n    <Card.Group itemsPerRow={4}>\n      {selectorList}\n    </Card.Group>\n     {/* <h2 style={stickyHeaderStyle}>Letdown Forklifts</h2>\n    <Card.Group itemsPerRow={4}>\n      {letForkCards}\n    </Card.Group>\n    <h2 style={stickyHeaderStyle}>Putaway Forklifts</h2>\n    <Card.Group itemsPerRow={4}>\n      {putForkCards}\n    </Card.Group>\n    <h2 style={stickyHeaderStyle}>Loaders</h2>\n    <Card.Group itemsPerRow={4}>\n      {loaderCards}\n    </Card.Group>\n    <h2 style={stickyHeaderStyle}>Receivers</h2>\n    <Card.Group itemsPerRow={4}>\n      {receiverCards}\n    </Card.Group> */}\n    \n    </div>\n  );\n}\n\nexport default AssociateRoster;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAAQC,WAAW,EAACC,WAAW,QAAO,aAAa;AACnD,SAAQC,YAAY,QAAO,0BAA0B;AACrD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,OAAO,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EACrD,MAAME,YAAY,GAAIC,QAAQ,IAAG;IAC/BJ,QAAQ,CAACN,YAAY,CAACU,QAAQ,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,iBAAiB,GAAG;IACxBC,QAAQ,EAAE,QAAQ;IAClBC,GAAG,EAAE,GAAG;IACRC,eAAe,EAAE,OAAO;IACxBC,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE,gCAAgC;IAC3CC,OAAO,EAAE;EACX,CAAC;EAGD,MAAMC,SAAS,GAAGX,OAAO,CAACA,OAAO,CAACY,MAAM,CAACC,QAAQ,IAAEA,QAAQ,CAACC,WAAW,KAAG,CAAC,CAAC;EAC5E,MAAMC,YAAY,GAAGJ,SAAS,CAACK,GAAG,CAACH,QAAQ,IAAE;IACtC,oBAAOjB,OAAA,CAACP,aAAa;MAAqB4B,MAAM,EAAEJ,QAAS;MAACX,YAAY,EAAEA;IAAa,GAA1DW,QAAQ,CAACK,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgD,CAAC;EAC7F,CAAC,CAAC;EACL,MAAMC,QAAQ,GAAGvB,OAAO,CAACY,MAAM,CAACY,QAAQ,IAAEA,QAAQ,CAACC,YAAY,KAAG,CAAC,CAAC;EACpE,MAAMC,YAAY,GAAGH,QAAQ,CAACP,GAAG,CAACQ,QAAQ,IAAE;IACzC,oBAAO5B,OAAA,CAACP,aAAa;MAAqB4B,MAAM,EAAEO,QAAS;MAACtB,YAAY,EAAEA;IAAa,GAA1DsB,QAAQ,CAACN,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgD,CAAC;EAC3F,CAAC,CAAC;EACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA,oBACE1B,OAAA;IAAA+B,QAAA,gBACA/B,OAAA;MAAIgC,KAAK,EAAExB,iBAAkB;MAAAuB,QAAA,EAAC;IAAS;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5C1B,OAAA,CAACF,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACT1B,OAAA,CAACN,IAAI,CAACuC,KAAK;MAACC,WAAW,EAAE,CAAE;MAAAH,QAAA,EACxBZ;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAkBR,CAAC;AAEV;AAACxB,EAAA,CAlEQD,eAAe;EAAA,QACLN,WAAW,EACZC,WAAW;AAAA;AAAAuC,EAAA,GAFpBlC,eAAe;AAoExB,eAAeA,eAAe;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}