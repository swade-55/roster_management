{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Async thunk for fetching allocation data\n// Async thunk for fetching allocation data\nexport const fetchAllocation = createAsyncThunk('allocation/fetchAllocation', async departmentData => {\n  // Adjust the POST URL and the data structure to match your Flask endpoint\n  const response = await axios.post('http://localhost:5555/optimize_workforce', {\n    demand: departmentData.demand\n  });\n  return response.data;\n});\nconst allocationSlice = createSlice({\n  name: 'allocation',\n  initialState: {\n    allocationData: {},\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchAllocation.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchAllocation.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.allocationData = action.payload;\n    },\n    [fetchAllocation.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }\n  }\n});\nexport default allocationSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchAllocation","departmentData","response","post","demand","data","allocationSlice","name","initialState","allocationData","status","error","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","message","reducer"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/features/allocationSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Async thunk for fetching allocation data\n// Async thunk for fetching allocation data\nexport const fetchAllocation = createAsyncThunk(\n  'allocation/fetchAllocation',\n  async (departmentData) => {\n    // Adjust the POST URL and the data structure to match your Flask endpoint\n    const response = await axios.post('http://localhost:5555/optimize_workforce', { demand: departmentData.demand });\n    return response.data;\n  }\n);\n\n\nconst allocationSlice = createSlice({\n  name: 'allocation',\n  initialState: {\n    allocationData: {},\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchAllocation.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchAllocation.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.allocationData = action.payload;\n    },\n    [fetchAllocation.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    },\n  },\n});\n\nexport default allocationSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAC7C,4BAA4B,EAC5B,MAAOG,cAAc,IAAK;EACxB;EACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,0CAA0C,EAAE;IAAEC,MAAM,EAAEH,cAAc,CAACG;EAAO,CAAC,CAAC;EAChH,OAAOF,QAAQ,CAACG,IAAI;AACtB,CACF,CAAC;AAGD,MAAMC,eAAe,GAAGT,WAAW,CAAC;EAClCU,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACZC,cAAc,EAAE,CAAC,CAAC;IAClBC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACb,CAACb,eAAe,CAACc,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAACL,MAAM,GAAG,SAAS;IAC1B,CAAC;IACD,CAACV,eAAe,CAACiB,SAAS,GAAG,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACL,MAAM,GAAG,WAAW;MAC1BK,KAAK,CAACN,cAAc,GAAGO,MAAM,CAACE,OAAO;IACvC,CAAC;IACD,CAAClB,eAAe,CAACmB,QAAQ,GAAG,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBK,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACL,KAAK,CAACS,OAAO;IACpC;EACF;AACF,CAAC,CAAC;AAEF,eAAed,eAAe,CAACe,OAAO"},"metadata":{},"sourceType":"module"}