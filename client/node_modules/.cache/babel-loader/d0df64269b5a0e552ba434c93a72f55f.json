{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunk action for adding a worker\nexport const addWorker = createAsyncThunk('workers/addAssociate', async (workerData, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const response = await fetch('http://localhost:5555/add_associate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(workerData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Server error!');\n    }\n    return await response.json();\n  } catch (error) {\n    return rejectWithValue(error.toString());\n  }\n});\n\n// Async thunk for updating an associate\nexport const updateAssociate = createAsyncThunk('workers/updateAssociate', async (associateData, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const response = await fetch('http://localhost:5555/update_associate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(associateData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Server error!');\n    }\n    return await response.json();\n  } catch (error) {\n    return rejectWithValue(error.toString());\n  }\n});\nconst initialState = {\n  workers: [],\n  editableAssociates: {},\n  // Initialized editableAssociates\n  currentForm: {\n    firstName: '',\n    lastName: '',\n    metrics: []\n  }\n};\nconst workersSlice = createSlice({\n  name: 'workers',\n  initialState,\n  reducers: {\n    // Reducer to set workers\n    setWorkers: (state, action) => action.payload,\n    // Reducer to delete a worker\n    deleteWorker: (state, action) => state.filter(worker => worker.id !== action.payload),\n    startEditing: (state, action) => {\n      const {\n        associateId,\n        associateData\n      } = action.payload;\n      state.editableAssociates[associateId] = associateData;\n    },\n    editAssociate: (state, action) => {\n      const {\n        associateId,\n        field,\n        value\n      } = action.payload;\n      if (!state.editableAssociates[associateId]) {\n        state.editableAssociates[associateId] = {};\n      }\n      state.editableAssociates[associateId][field] = value;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(addWorker.fulfilled, (state, action) => {\n      state.push(action.payload);\n    }).addCase(addWorker.rejected, (state, action) => {\n      console.error('Failed to add worker:', action.payload);\n    }).addCase(updateAssociate.fulfilled, (state, action) => {\n      const index = state.workers.findIndex(worker => worker.id === action.payload.id);\n      if (index !== -1) {\n        state.workers[index] = action.payload;\n      }\n    }).addCase(updateAssociate.rejected, (state, action) => {\n      console.error('Failed to update associate:', action.payload);\n    });\n  }\n});\nexport const {\n  setWorkers,\n  deleteWorker,\n  startEditing,\n  editAssociate\n} = workersSlice.actions;\nexport default workersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","addWorker","workerData","_ref","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","error","toString","updateAssociate","associateData","_ref2","initialState","workers","editableAssociates","currentForm","firstName","lastName","metrics","workersSlice","name","reducers","setWorkers","state","action","payload","deleteWorker","filter","worker","id","startEditing","associateId","editAssociate","field","value","extraReducers","builder","addCase","fulfilled","push","rejected","console","index","findIndex","actions","reducer"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/features/workersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunk action for adding a worker\nexport const addWorker = createAsyncThunk(\n  'workers/addAssociate',\n  async (workerData, { rejectWithValue }) => {\n    try {\n      const response = await fetch('http://localhost:5555/add_associate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(workerData),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Server error!');\n      }\n      return await response.json();\n    } catch (error) {\n      return rejectWithValue(error.toString());\n    }\n  }\n);\n\n// Async thunk for updating an associate\nexport const updateAssociate = createAsyncThunk(\n  'workers/updateAssociate',\n  async (associateData, { rejectWithValue }) => {\n    try {\n      const response = await fetch('http://localhost:5555/update_associate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(associateData),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Server error!');\n      }\n      return await response.json();\n    } catch (error) {\n      return rejectWithValue(error.toString());\n    }\n  }\n);\n\nconst initialState = {\n  workers: [],\n  editableAssociates: {}, // Initialized editableAssociates\n  currentForm: {\n    firstName: '',\n    lastName: '',\n    metrics: []\n  }\n};\n\nconst workersSlice = createSlice({\n  name: 'workers',\n  initialState,\n  reducers: {\n    // Reducer to set workers\n    setWorkers: (state, action) => action.payload,\n    // Reducer to delete a worker\n    deleteWorker: (state, action) => state.filter((worker) => worker.id !== action.payload),\n    startEditing: (state, action) => {\n      const { associateId, associateData } = action.payload;\n      state.editableAssociates[associateId] = associateData;\n    },\n    editAssociate: (state, action) => {\n      const { associateId, field, value } = action.payload;\n      if (!state.editableAssociates[associateId]) {\n        state.editableAssociates[associateId] = {};\n      }\n      state.editableAssociates[associateId][field] = value;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(addWorker.fulfilled, (state, action) => {\n        state.push(action.payload);\n      })\n      .addCase(addWorker.rejected, (state, action) => {\n        console.error('Failed to add worker:', action.payload);\n      })\n      .addCase(updateAssociate.fulfilled,(state,action)=>{\n        const index = state.workers.findIndex(worker => worker.id === action.payload.id);\n        if (index !== -1) {\n          state.workers[index] = action.payload;\n        }\n      })\n      .addCase(updateAssociate.rejected, (state, action) => {\n        console.error('Failed to update associate:', action.payload);\n      });\n  },\n});\n\nexport const { setWorkers, deleteWorker, startEditing, editAssociate } = workersSlice.actions;\nexport default workersSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}