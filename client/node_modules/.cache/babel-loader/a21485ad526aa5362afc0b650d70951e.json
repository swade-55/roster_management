{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/DepartmentForm.js\",\n  _s = $RefreshSig$();\n// ... other imports\nimport { useDispatch } from 'react-redux';\nimport { fetchAllocation } from '../features/allocationSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DepartmentForm = () => {\n  _s();\n  const [departmentData, setDepartmentData] = useState({\n    departments: {},\n    total_heads: 0\n  });\n  const dispatch = useDispatch();\n  const handleDepartmentChange = (e, deptName) => {\n    const value = e.target.value;\n    const name = e.target.name;\n    setDepartmentData(prevState => ({\n      ...prevState,\n      departments: {\n        ...prevState.departments,\n        [deptName]: {\n          ...prevState.departments[deptName],\n          [name]: name === 'total_cases' ? parseInt(value, 10) : parseFloat(value)\n        }\n      }\n    }));\n  };\n  const handleHeadsChange = e => {\n    setDepartmentData(prevState => ({\n      ...prevState,\n      total_heads: parseInt(e.target.value, 10)\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(fetchAllocation({\n      demand: departmentData\n    }));\n  };\n\n  // Render form elements for each department dynamically\n  // For simplicity, let's assume you have a static list of departments: DeptA, DeptB, DeptC\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [['DeptA', 'DeptB', 'DeptC'].map(deptName => {\n      var _departmentData$depar, _departmentData$depar2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: deptName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Total Cases for \", deptName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"total_cases\",\n            value: ((_departmentData$depar = departmentData.departments[deptName]) === null || _departmentData$depar === void 0 ? void 0 : _departmentData$depar.total_cases) || '',\n            onChange: e => handleDepartmentChange(e, deptName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Cases Per Hour for \", deptName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"cases_per_hour\",\n            value: ((_departmentData$depar2 = departmentData.departments[deptName]) === null || _departmentData$depar2 === void 0 ? void 0 : _departmentData$depar2.cases_per_hour) || '',\n            onChange: e => handleDepartmentChange(e, deptName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, deptName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Total Heads:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: departmentData.total_heads,\n        onChange: handleHeadsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Calculate Allocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(DepartmentForm, \"SWFqV9wRtE7xbjEBHK282zUzrZU=\", false, function () {\n  return [useDispatch];\n});\n_c = DepartmentForm;\nexport default DepartmentForm;\nvar _c;\n$RefreshReg$(_c, \"DepartmentForm\");","map":{"version":3,"names":["useDispatch","fetchAllocation","jsxDEV","_jsxDEV","DepartmentForm","_s","departmentData","setDepartmentData","useState","departments","total_heads","dispatch","handleDepartmentChange","e","deptName","value","target","name","prevState","parseInt","parseFloat","handleHeadsChange","handleSubmit","preventDefault","demand","onSubmit","children","map","_departmentData$depar","_departmentData$depar2","fileName","_jsxFileName","lineNumber","columnNumber","type","total_cases","onChange","cases_per_hour","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/DepartmentForm.js"],"sourcesContent":["// ... other imports\nimport { useDispatch } from 'react-redux';\nimport { fetchAllocation } from '../features/allocationSlice';\n\nconst DepartmentForm = () => {\n  const [departmentData, setDepartmentData] = useState({ departments: {}, total_heads: 0 });\n  const dispatch = useDispatch();\n\n  const handleDepartmentChange = (e, deptName) => {\n    const value = e.target.value;\n    const name = e.target.name;\n\n    setDepartmentData(prevState => ({\n      ...prevState,\n      departments: {\n        ...prevState.departments,\n        [deptName]: {\n          ...prevState.departments[deptName],\n          [name]: name === 'total_cases' ? parseInt(value, 10) : parseFloat(value)\n        }\n      }\n    }));\n  };\n\n  const handleHeadsChange = (e) => {\n    setDepartmentData(prevState => ({\n      ...prevState,\n      total_heads: parseInt(e.target.value, 10)\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(fetchAllocation({ demand: departmentData }));\n  };\n\n  // Render form elements for each department dynamically\n  // For simplicity, let's assume you have a static list of departments: DeptA, DeptB, DeptC\n  return (\n    <form onSubmit={handleSubmit}>\n      {['DeptA', 'DeptB', 'DeptC'].map(deptName => (\n        <div key={deptName}>\n          <h2>{deptName}</h2>\n          <div>\n            <label>Total Cases for {deptName}:</label>\n            <input\n              type=\"number\"\n              name=\"total_cases\"\n              value={departmentData.departments[deptName]?.total_cases || ''}\n              onChange={e => handleDepartmentChange(e, deptName)}\n            />\n          </div>\n          <div>\n            <label>Cases Per Hour for {deptName}:</label>\n            <input\n              type=\"number\"\n              name=\"cases_per_hour\"\n              value={departmentData.departments[deptName]?.cases_per_hour || ''}\n              onChange={e => handleDepartmentChange(e, deptName)}\n            />\n          </div>\n        </div>\n      ))}\n      <div>\n        <label>Total Heads:</label>\n        <input\n          type=\"number\"\n          value={departmentData.total_heads}\n          onChange={handleHeadsChange}\n        />\n      </div>\n      <button type=\"submit\">Calculate Allocation</button>\n    </form>\n  );\n};\n\nexport default DepartmentForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}