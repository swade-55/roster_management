{"ast":null,"code":"// import React, { useState } from 'react';\n// import Modal from 'react-modal';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { setAssociates } from '../features/schedulesSlice';\n// import './AssociatesTable.css';\n\n// const AssociatesTable = () => {\n//   const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n//   const dispatch = useDispatch();\n//   // const associates = useSelector((state) => state.schedules.associates);\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\n//   const [currentAssociate, setCurrentAssociate] = useState(null);\n\n//   const workers = useSelector((state) => state.workers.workers); // Adjusted to the correct slice\n//   const segregatedSchedules = daysOfWeek.reduce((acc, day) => {\n//     acc[day] = workers\n//       .filter((worker) => worker.schedules[day])\n//       .map((worker) => ({\n//         ...worker.schedules[day],\n//         name: `${worker.first_name} ${worker.last_name}`,\n//         associate_id: worker.id,\n//       }));\n//     return acc;\n//   }, {});\n\n//   console.log(segregatedSchedules);\n\n//   const dayMapping = {\n//     \"Monday\": { day_id: 1, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//     \"Tuesday\": { day_id: 2, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//     \"Wednesday\": { day_id: 3, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//     \"Thursday\": { day_id: 4, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//     \"Friday\": { day_id: 5, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//     \"Saturday\": { day_id: 6, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//     \"Sunday\": { day_id: 7, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//   };\n\n//   // React.useEffect(() => {\n//   //   const fetchData = async () => {\n//   //     try {\n//   //       const response = await fetch('http://localhost:5555/associates_working_days');\n//   //       const data = await response.json();\n//   //       dispatch(setAssociates(data));\n//   //     } catch (error) {\n//   //       console.error(\"Fetching data error:\", error);\n//   //     }\n//   //   };\n\n//   //   fetchData();\n//   // }, [dispatch]);\n\n//   const openModal = (associate) => {\n//     setCurrentAssociate(associate);\n//     setModalIsOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalIsOpen(false);\n//     setCurrentAssociate(null);\n//   };\n\n//   const handleCheckboxChange = (day) => {\n//     // Check if currentAssociate is defined and has a working_days array\n//     if (currentAssociate && Array.isArray(currentAssociate.working_days)) {\n//       if (currentAssociate.working_days.includes(day)) {\n//         setCurrentAssociate({\n//           ...currentAssociate,\n//           working_days: currentAssociate.working_days.filter(d => d !== day),\n//         });\n//       } else {\n//         setCurrentAssociate({\n//           ...currentAssociate,\n//           working_days: [...currentAssociate.working_days, day],\n//         });\n//       }\n//     } else {\n//       // If currentAssociate or working_days is undefined, safely handle the scenario\n//       // For example, initialize working_days as an array with the current day if it doesn't exist\n//       setCurrentAssociate({\n//         ...currentAssociate,\n//         working_days: [day],\n//       });\n//     }\n//   };\n\n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n//     const scheduleUpdates = currentAssociate.working_days.map(day => ({\n//       day_id: dayMapping[day].day_id,\n//       shift_start: dayMapping[day].shift_start,\n//       shift_end: dayMapping[day].shift_end\n//     }));\n\n//     try {\n//       const response = await fetch(`http://localhost:5555/update_schedule/${currentAssociate.associate_id}`, {\n//         method: 'PATCH',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(scheduleUpdates)\n//       });\n\n//       if (response.ok) {\n//         closeModal();\n//       } else {\n//         const data = await response.json();\n//         console.error(data.error);\n//       }\n//     } catch (error) {\n//       console.error(\"Submitting form error:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"associates-table-container\">\n//       <table className=\"ui definition table\">\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             {daysOfWeek.map((day) => (\n//               <th key={day}>{day}</th>\n//             ))}\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {workers.map((associate) => (\n//             <tr key={associate.id}>\n//               <td onClick={() => openModal(associate)} style={{ cursor: 'pointer' }}>\n//                 {`${associate.first_name} ${associate.last_name}`}\n//               </td>\n//               {daysOfWeek.map((day) => (\n//                 <td key={day}>\n//                   {/* Check if the associate is scheduled on this day */}\n//                   {segregatedSchedules[day].some((sched) => sched.associate_id === associate.id)\n//                     ? '✓'\n//                     : 'X'}\n//                 </td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {currentAssociate && (\n//         <Modal\n//          isOpen={modalIsOpen} \n//          onRequestClose={closeModal}\n//          style={{\n//           overlay: {\n//             backgroundColor: 'rgba(0, 0, 0, 0.75)'\n//           },\n//           content: {\n//             position: 'absolute',\n//             top: '50%',\n//             left: '50%',\n//             right: 'auto',\n//             bottom: 'auto',\n//             marginRight: '-50%',\n//             transform: 'translate(-50%, -50%)',\n//             border: '1px solid #ccc',\n//             background: '#fff',\n//             overflow: 'auto',\n//             WebkitOverflowScrolling: 'touch',\n//             borderRadius: '4px',\n//             outline: 'none',\n//             padding: '20px'\n//           }\n//         }}\n//          >\n//           <h2>Editing schedule for {currentAssociate.name}</h2>\n//           <form onSubmit={handleFormSubmit}>\n//             {daysOfWeek.map((day) => (\n//               <div key={day}>\n//                 <label>\n//                   <input\n//                     type=\"checkbox\"\n//                     checked={currentAssociate.working_days.includes(day)}\n//                     onChange={() => handleCheckboxChange(day)}\n//                   />\n//                   {day}\n//                 </label>\n//               </div>\n//             ))}\n//             <button type=\"submit\">Save</button>\n//             <button type=\"button\" onClick={closeModal}>Close</button>\n//           </form>\n//         </Modal>\n//       )}\n//     </div>\n//   );\n// };\n// export default AssociatesTable;\n\n// //   return (\n//   //     <div className=\"associates-table-container\">\n//   //       <table className=\"ui definition table\">\n// //         <thead>\n// //           <tr>\n// //             <th>Name</th>\n// //             {daysOfWeek.map((day) => (\n// //               <th key={day}>{day}</th>\n// //             ))}\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {workers.map((associate) => (\n// //             <tr key={associate.associate_id}>\n// //               <td onClick={() => openModal(associate)} style={{ cursor: 'pointer' }}>{associate.name}</td>\n// //               {daysOfWeek.map((day) => (\n// //                 <td key={day}>\n// //                   {associate.working_days.includes(day) ? '✓' : 'X'}\n// //                 </td>\n// //               ))}\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //       {currentAssociate && (\n// //         <Modal\n// //          isOpen={modalIsOpen} \n// //          onRequestClose={closeModal}\n// //          style={{\n// //           overlay: {\n// //             backgroundColor: 'rgba(0, 0, 0, 0.75)'\n// //           },\n// //           content: {\n// //             position: 'absolute',\n// //             top: '50%',\n// //             left: '50%',\n// //             right: 'auto',\n// //             bottom: 'auto',\n// //             marginRight: '-50%',\n// //             transform: 'translate(-50%, -50%)',\n// //             border: '1px solid #ccc',\n// //             background: '#fff',\n// //             overflow: 'auto',\n// //             WebkitOverflowScrolling: 'touch',\n// //             borderRadius: '4px',\n// //             outline: 'none',\n// //             padding: '20px'\n// //           }\n// //         }}\n// //          >\n// //           <h2>Editing schedule for {currentAssociate.name}</h2>\n// //           <form onSubmit={handleFormSubmit}>\n// //             {daysOfWeek.map((day) => (\n// //               <div key={day}>\n// //                 <label>\n// //                   <input\n// //                     type=\"checkbox\"\n// //                     checked={currentAssociate.working_days.includes(day)}\n// //                     onChange={() => handleCheckboxChange(day)}\n// //                   />\n// //                   {day}\n// //                 </label>\n// //               </div>\n// //             ))}\n// //             <button type=\"submit\">Save</button>\n// //             <button type=\"button\" onClick={closeModal}>Close</button>\n// //           </form>\n// //         </Modal>\n// //       )}\n// //     </div>\n// //   );\n// // };","map":{"version":3,"names":[],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociateForm.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Modal from 'react-modal';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { setAssociates } from '../features/schedulesSlice';\n// import './AssociatesTable.css';\n\n// const AssociatesTable = () => {\n//   const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n//   const dispatch = useDispatch();\n//   // const associates = useSelector((state) => state.schedules.associates);\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\n//   const [currentAssociate, setCurrentAssociate] = useState(null);\n  \n\n//   const workers = useSelector((state) => state.workers.workers); // Adjusted to the correct slice\n//   const segregatedSchedules = daysOfWeek.reduce((acc, day) => {\n//     acc[day] = workers\n//       .filter((worker) => worker.schedules[day])\n//       .map((worker) => ({\n//         ...worker.schedules[day],\n//         name: `${worker.first_name} ${worker.last_name}`,\n//         associate_id: worker.id,\n//       }));\n//     return acc;\n//   }, {});\n  \n//   console.log(segregatedSchedules);\n\n//   const dayMapping = {\n//     \"Monday\": { day_id: 1, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//     \"Tuesday\": { day_id: 2, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//     \"Wednesday\": { day_id: 3, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//     \"Thursday\": { day_id: 4, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//     \"Friday\": { day_id: 5, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//     \"Saturday\": { day_id: 6, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//     \"Sunday\": { day_id: 7, shift_start: \"09:00:00\", shift_end: \"17:00:00\" },\n//   };\n\n//   // React.useEffect(() => {\n//   //   const fetchData = async () => {\n//   //     try {\n//   //       const response = await fetch('http://localhost:5555/associates_working_days');\n//   //       const data = await response.json();\n//   //       dispatch(setAssociates(data));\n//   //     } catch (error) {\n//   //       console.error(\"Fetching data error:\", error);\n//   //     }\n//   //   };\n\n//   //   fetchData();\n//   // }, [dispatch]);\n\n\n//   const openModal = (associate) => {\n//     setCurrentAssociate(associate);\n//     setModalIsOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalIsOpen(false);\n//     setCurrentAssociate(null);\n//   };\n\n//   const handleCheckboxChange = (day) => {\n//     // Check if currentAssociate is defined and has a working_days array\n//     if (currentAssociate && Array.isArray(currentAssociate.working_days)) {\n//       if (currentAssociate.working_days.includes(day)) {\n//         setCurrentAssociate({\n//           ...currentAssociate,\n//           working_days: currentAssociate.working_days.filter(d => d !== day),\n//         });\n//       } else {\n//         setCurrentAssociate({\n//           ...currentAssociate,\n//           working_days: [...currentAssociate.working_days, day],\n//         });\n//       }\n//     } else {\n//       // If currentAssociate or working_days is undefined, safely handle the scenario\n//       // For example, initialize working_days as an array with the current day if it doesn't exist\n//       setCurrentAssociate({\n//         ...currentAssociate,\n//         working_days: [day],\n//       });\n//     }\n//   };\n  \n  \n\n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n//     const scheduleUpdates = currentAssociate.working_days.map(day => ({\n//       day_id: dayMapping[day].day_id,\n//       shift_start: dayMapping[day].shift_start,\n//       shift_end: dayMapping[day].shift_end\n//     }));\n\n\n//     try {\n//       const response = await fetch(`http://localhost:5555/update_schedule/${currentAssociate.associate_id}`, {\n//         method: 'PATCH',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(scheduleUpdates)\n//       });\n\n//       if (response.ok) {\n//         closeModal();\n//       } else {\n//         const data = await response.json();\n//         console.error(data.error);\n//       }\n//     } catch (error) {\n//       console.error(\"Submitting form error:\", error);\n//     }\n//   };\n\n\n//   return (\n//     <div className=\"associates-table-container\">\n//       <table className=\"ui definition table\">\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             {daysOfWeek.map((day) => (\n//               <th key={day}>{day}</th>\n//             ))}\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {workers.map((associate) => (\n//             <tr key={associate.id}>\n//               <td onClick={() => openModal(associate)} style={{ cursor: 'pointer' }}>\n//                 {`${associate.first_name} ${associate.last_name}`}\n//               </td>\n//               {daysOfWeek.map((day) => (\n//                 <td key={day}>\n//                   {/* Check if the associate is scheduled on this day */}\n//                   {segregatedSchedules[day].some((sched) => sched.associate_id === associate.id)\n//                     ? '✓'\n//                     : 'X'}\n//                 </td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {currentAssociate && (\n//         <Modal\n//          isOpen={modalIsOpen} \n//          onRequestClose={closeModal}\n//          style={{\n//           overlay: {\n//             backgroundColor: 'rgba(0, 0, 0, 0.75)'\n//           },\n//           content: {\n//             position: 'absolute',\n//             top: '50%',\n//             left: '50%',\n//             right: 'auto',\n//             bottom: 'auto',\n//             marginRight: '-50%',\n//             transform: 'translate(-50%, -50%)',\n//             border: '1px solid #ccc',\n//             background: '#fff',\n//             overflow: 'auto',\n//             WebkitOverflowScrolling: 'touch',\n//             borderRadius: '4px',\n//             outline: 'none',\n//             padding: '20px'\n//           }\n//         }}\n//          >\n//           <h2>Editing schedule for {currentAssociate.name}</h2>\n//           <form onSubmit={handleFormSubmit}>\n//             {daysOfWeek.map((day) => (\n//               <div key={day}>\n//                 <label>\n//                   <input\n//                     type=\"checkbox\"\n//                     checked={currentAssociate.working_days.includes(day)}\n//                     onChange={() => handleCheckboxChange(day)}\n//                   />\n//                   {day}\n//                 </label>\n//               </div>\n//             ))}\n//             <button type=\"submit\">Save</button>\n//             <button type=\"button\" onClick={closeModal}>Close</button>\n//           </form>\n//         </Modal>\n//       )}\n//     </div>\n//   );\n// };\n// export default AssociatesTable;\n\n// //   return (\n//   //     <div className=\"associates-table-container\">\n//   //       <table className=\"ui definition table\">\n// //         <thead>\n// //           <tr>\n// //             <th>Name</th>\n// //             {daysOfWeek.map((day) => (\n// //               <th key={day}>{day}</th>\n// //             ))}\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {workers.map((associate) => (\n// //             <tr key={associate.associate_id}>\n// //               <td onClick={() => openModal(associate)} style={{ cursor: 'pointer' }}>{associate.name}</td>\n// //               {daysOfWeek.map((day) => (\n// //                 <td key={day}>\n// //                   {associate.working_days.includes(day) ? '✓' : 'X'}\n// //                 </td>\n// //               ))}\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //       {currentAssociate && (\n// //         <Modal\n// //          isOpen={modalIsOpen} \n// //          onRequestClose={closeModal}\n// //          style={{\n// //           overlay: {\n// //             backgroundColor: 'rgba(0, 0, 0, 0.75)'\n// //           },\n// //           content: {\n// //             position: 'absolute',\n// //             top: '50%',\n// //             left: '50%',\n// //             right: 'auto',\n// //             bottom: 'auto',\n// //             marginRight: '-50%',\n// //             transform: 'translate(-50%, -50%)',\n// //             border: '1px solid #ccc',\n// //             background: '#fff',\n// //             overflow: 'auto',\n// //             WebkitOverflowScrolling: 'touch',\n// //             borderRadius: '4px',\n// //             outline: 'none',\n// //             padding: '20px'\n// //           }\n// //         }}\n// //          >\n// //           <h2>Editing schedule for {currentAssociate.name}</h2>\n// //           <form onSubmit={handleFormSubmit}>\n// //             {daysOfWeek.map((day) => (\n// //               <div key={day}>\n// //                 <label>\n// //                   <input\n// //                     type=\"checkbox\"\n// //                     checked={currentAssociate.working_days.includes(day)}\n// //                     onChange={() => handleCheckboxChange(day)}\n// //                   />\n// //                   {day}\n// //                 </label>\n// //               </div>\n// //             ))}\n// //             <button type=\"submit\">Save</button>\n// //             <button type=\"button\" onClick={closeModal}>Close</button>\n// //           </form>\n// //         </Modal>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}