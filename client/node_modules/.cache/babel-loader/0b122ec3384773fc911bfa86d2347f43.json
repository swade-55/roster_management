{"ast":null,"code":"// In scheduleSlice.js or a similar file\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Define the async thunk\nexport const fetchSchedule = createAsyncThunk('schedule/fetchSchedule', async (dailyDemand, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const response = await fetch('http://127.0.0.1:5555/generate_schedule', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dailyDemand)\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok ' + response.statusText);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\n// Define the initial state\nconst initialState = {\n  scheduleData: null,\n  status: 'idle',\n  // 'idle' | 'loading' | 'succeeded' | 'failed'\n  error: null\n};\n\n// Create slice\nconst scheduleSlice = createSlice({\n  name: 'schedule',\n  initialState,\n  reducers: {\n    // Optionally add reducers for other non-async actions\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchSchedule.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchSchedule.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.scheduleData = action.payload.Schedules;\n      state.additionalResources = action.payload[\"Additional Resources\"];\n    }).addCase(fetchSchedule.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport default scheduleSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchSchedule","dailyDemand","_ref","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","data","json","error","message","initialState","scheduleData","status","scheduleSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","Schedules","additionalResources","rejected","reducer"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/features/scheduleSlice.js"],"sourcesContent":["// In scheduleSlice.js or a similar file\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Define the async thunk\nexport const fetchSchedule = createAsyncThunk(\n  'schedule/fetchSchedule',\n  async (dailyDemand, { rejectWithValue }) => {\n    try {\n      const response = await fetch('http://127.0.0.1:5555/generate_schedule', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dailyDemand)\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok ' + response.statusText);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// Define the initial state\nconst initialState = {\n  scheduleData: null,\n  status: 'idle', // 'idle' | 'loading' | 'succeeded' | 'failed'\n  error: null\n};\n\n// Create slice\nconst scheduleSlice = createSlice({\n  name: 'schedule',\n  initialState,\n  reducers: {\n    // Optionally add reducers for other non-async actions\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchSchedule.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchSchedule.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.scheduleData = action.payload.Schedules;\n        state.additionalResources = action.payload[\"Additional Resources\"];\n      })\n      .addCase(fetchSchedule.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      });\n  }\n});\n\nexport default scheduleSlice.reducer;\n"],"mappings":"AAAA;;AAEA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,aAAa,GAAGD,gBAAgB,CAC3C,wBAAwB,EACxB,OAAOE,WAAW,EAAAC,IAAA,KAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAD,IAAA;EACrC,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,WAAW;IAClC,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,GAAGR,QAAQ,CAACS,UAAU,CAAC;IACvE;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOb,eAAe,CAACa,KAAK,CAACC,OAAO,CAAC;EACvC;AACF,CACF,CAAC;;AAED;AACA,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,IAAI;EAClBC,MAAM,EAAE,MAAM;EAAE;EAChBJ,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMK,aAAa,GAAGvB,WAAW,CAAC;EAChCwB,IAAI,EAAE,UAAU;EAChBJ,YAAY;EACZK,QAAQ,EAAE;IACR;EAAA,CACD;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC1B,aAAa,CAAC2B,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACR,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDM,OAAO,CAAC1B,aAAa,CAAC6B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACR,MAAM,GAAG,WAAW;MAC1BQ,KAAK,CAACT,YAAY,GAAGW,MAAM,CAACC,OAAO,CAACC,SAAS;MAC7CJ,KAAK,CAACK,mBAAmB,GAAGH,MAAM,CAACC,OAAO,CAAC,sBAAsB,CAAC;IACpE,CAAC,CAAC,CACDL,OAAO,CAAC1B,aAAa,CAACkC,QAAQ,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACR,MAAM,GAAG,QAAQ;MACvBQ,KAAK,CAACZ,KAAK,GAAGc,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeV,aAAa,CAACc,OAAO"},"metadata":{},"sourceType":"module"}