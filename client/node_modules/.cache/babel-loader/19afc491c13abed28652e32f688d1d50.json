{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociateForm.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, useField } from 'formik';\n\n// Custom Input component for Formik\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyTextInput = _ref => {\n  _s();\n  let {\n    label,\n    ...props\n  } = _ref;\n  const [field] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// Custom Select component for Formik\n_s(MyTextInput, \"z3HN8a8tvzohqoKT3WnQcNgd46I=\", false, function () {\n  return [useField];\n});\n_c = MyTextInput;\nconst MySelect = _ref2 => {\n  _s2();\n  let {\n    label,\n    ...props\n  } = _ref2;\n  const [field] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// Job classes array\n_s2(MySelect, \"z3HN8a8tvzohqoKT3WnQcNgd46I=\", false, function () {\n  return [useField];\n});\n_c2 = MySelect;\nconst jobClasses = [{\n  id: 1,\n  name: 'Putaway Forklift'\n}, {\n  id: 2,\n  name: 'Selector'\n}, {\n  id: 3,\n  name: 'Loader'\n}, {\n  id: 4,\n  name: 'Receiver'\n}, {\n  id: 5,\n  name: 'Letdown Forklift'\n}\n// ... other job classes\n];\n\nfunction AssociateForm() {\n  // Initial values for the form\n  const initialValues = {\n    firstName: '',\n    lastName: '',\n    jobClass_id: '' // Added back the jobClass_id\n  };\n\n  // onSubmit function for additional debugging\n  const onSubmit = (values, _ref3) => {\n    let {\n      setSubmitting,\n      resetForm\n    } = _ref3;\n    console.log('Attempting to submit form with values:', values);\n    alert('Form submitted, check the console for values!');\n    resetForm();\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add an Associate!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      children: _ref4 => {\n        let {\n          isSubmitting\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(MySelect, {\n            label: \"Job Class\",\n            name: \"jobClass_id\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a Job Class\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), jobClasses.map(jobClass => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: jobClass.id,\n              children: jobClass.name\n            }, jobClass.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"First Name\",\n            name: \"firstName\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"Last Name\",\n            name: \"lastName\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_c3 = AssociateForm;\nexport default AssociateForm;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"MySelect\");\n$RefreshReg$(_c3, \"AssociateForm\");","map":{"version":3,"names":["React","Formik","Form","useField","jsxDEV","_jsxDEV","Fragment","_Fragment","MyTextInput","_ref","_s","label","props","field","children","htmlFor","id","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","MySelect","_ref2","_s2","_c2","jobClasses","AssociateForm","initialValues","firstName","lastName","jobClass_id","onSubmit","values","_ref3","setSubmitting","resetForm","console","log","alert","_ref4","isSubmitting","value","map","jobClass","type","disabled","_c3","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociateForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, useField } from 'formik';\n\n// Custom Input component for Formik\nconst MyTextInput = ({ label, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input {...field} {...props} />\n    </>\n  );\n};\n\n// Custom Select component for Formik\nconst MySelect = ({ label, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <select {...field} {...props} />\n    </>\n  );\n};\n\n// Job classes array\nconst jobClasses = [\n  { id: 1, name: 'Putaway Forklift' },\n  { id: 2, name: 'Selector' },\n  { id: 3, name: 'Loader' },\n  { id: 4, name: 'Receiver' },\n  { id: 5, name: 'Letdown Forklift' }\n  // ... other job classes\n];\n\nfunction AssociateForm() {\n  // Initial values for the form\n  const initialValues = {\n    firstName: '',\n    lastName: '',\n    jobClass_id: '', // Added back the jobClass_id\n  };\n\n  // onSubmit function for additional debugging\n  const onSubmit = (values, { setSubmitting, resetForm }) => {\n    console.log('Attempting to submit form with values:', values);\n    alert('Form submitted, check the console for values!');\n    resetForm();\n    setSubmitting(false);\n  };\n\n  return (\n    <div>\n      <h3>Add an Associate!</h3>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <MySelect label=\"Job Class\" name=\"jobClass_id\">\n              <option value=\"\">Select a Job Class</option>\n              {jobClasses.map(jobClass => (\n                <option key={jobClass.id} value={jobClass.id}>\n                  {jobClass.name}\n                </option>\n              ))}\n            </MySelect>\n            <MyTextInput label=\"First Name\" name=\"firstName\" type=\"text\" />\n            <MyTextInput label=\"Last Name\" name=\"lastName\" type=\"text\" />\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default AssociateForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}