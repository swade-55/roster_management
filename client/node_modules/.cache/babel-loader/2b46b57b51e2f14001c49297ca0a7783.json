{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchAllocation = createAsyncThunk('allocation/fetchAllocation', async (data, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const response = await fetch('http://localhost:5555/allocate_heads', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok ' + response.statusText);\n    }\n    const allocationData = await response.json();\n    return allocationData;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst allocationSlice = createSlice({\n  name: 'allocation',\n  initialState: {\n    allocationData: {},\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchAllocation.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchAllocation.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.allocationData = action.payload;\n    },\n    [fetchAllocation.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }\n  }\n});\nexport default allocationSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchAllocation","data","_ref","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","allocationData","json","error","message","allocationSlice","name","initialState","status","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/features/allocationSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n\nexport const fetchAllocation = createAsyncThunk(\n  'allocation/fetchAllocation',\n  async (data, { rejectWithValue }) => {\n    try {\n      const response = await fetch('http://localhost:5555/allocate_heads', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok ' + response.statusText);\n      }\n\n      const allocationData = await response.json();\n      return allocationData;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n\nconst allocationSlice = createSlice({\n  name: 'allocation',\n  initialState: {\n    allocationData: {},\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchAllocation.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchAllocation.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.allocationData = action.payload;\n    },\n    [fetchAllocation.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    },\n  },\n});\n\nexport default allocationSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAC7C,4BAA4B,EAC5B,OAAOG,IAAI,EAAAC,IAAA,KAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAD,IAAA;EAC9B,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,GAAGR,QAAQ,CAACS,UAAU,CAAC;IACvE;IAEA,MAAMC,cAAc,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAC5C,OAAOD,cAAc;EACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOb,eAAe,CAACa,KAAK,CAACC,OAAO,CAAC;EACvC;AACF,CACF,CAAC;AAGD,MAAMC,eAAe,GAAGrB,WAAW,CAAC;EAClCsB,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACZN,cAAc,EAAE,CAAC,CAAC;IAClBO,MAAM,EAAE,MAAM;IACdL,KAAK,EAAE;EACT,CAAC;EACDM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACb,CAACvB,eAAe,CAACwB,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC;IACD,CAACrB,eAAe,CAAC2B,SAAS,GAAG,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACX,cAAc,GAAGY,MAAM,CAACE,OAAO;IACvC,CAAC;IACD,CAAC5B,eAAe,CAAC6B,QAAQ,GAAG,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACV,KAAK,CAACC,OAAO;IACpC;EACF;AACF,CAAC,CAAC;AAEF,eAAeC,eAAe,CAACY,OAAO"},"metadata":{},"sourceType":"module"}