{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunk action for adding a worker\nexport const addWorker = createAsyncThunk('workers/addWorker', async (workerData, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const response = await fetch('/workers_metrics', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(workerData)\n    });\n    if (!response.ok) throw new Error('Server error!');\n    return await response.json();\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst workersSlice = createSlice({\n  name: 'workers',\n  initialState: [],\n  reducers: {\n    // Reducer to set workers\n    setWorkers: (state, action) => action.payload,\n    // Reducer to delete a worker\n    deleteWorker: (state, action) => state.filter(worker => worker.id !== action.payload)\n  },\n  extraReducers: builder => {\n    builder.addCase(addWorker.fulfilled, (state, action) => {\n      // Add the new worker to the state\n      state.push(action.payload);\n    }).addCase(addWorker.rejected, (state, action) => {\n      // Handle the case where adding a worker fails\n      console.error('Failed to add worker:', action.payload);\n    });\n  }\n});\nexport const {\n  setWorkers,\n  deleteWorker\n} = workersSlice.actions;\nexport default workersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","addWorker","workerData","_ref","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","message","workersSlice","name","initialState","reducers","setWorkers","state","action","payload","deleteWorker","filter","worker","id","extraReducers","builder","addCase","fulfilled","push","rejected","console","actions","reducer"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/features/workersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunk action for adding a worker\nexport const addWorker = createAsyncThunk(\n  'workers/addWorker',\n  async (workerData, { rejectWithValue }) => {\n    try {\n      const response = await fetch('/workers_metrics', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(workerData),\n      });\n      if (!response.ok) throw new Error('Server error!');\n      return await response.json();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst workersSlice = createSlice({\n  name: 'workers',\n  initialState: [],\n  reducers: {\n    // Reducer to set workers\n    setWorkers: (state, action) => action.payload,\n    // Reducer to delete a worker\n    deleteWorker: (state, action) => state.filter((worker) => worker.id !== action.payload),\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(addWorker.fulfilled, (state, action) => {\n        // Add the new worker to the state\n        state.push(action.payload);\n      })\n      .addCase(addWorker.rejected, (state, action) => {\n        // Handle the case where adding a worker fails\n        console.error('Failed to add worker:', action.payload);\n      });\n  },\n});\n\nexport const { setWorkers, deleteWorker } = workersSlice.actions;\nexport default workersSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CACvC,mBAAmB,EACnB,OAAOE,UAAU,EAAAC,IAAA,KAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAD,IAAA;EACpC,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC/CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,UAAU;IACjC,CAAC,CAAC;IACF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IAClD,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOX,eAAe,CAACW,KAAK,CAACC,OAAO,CAAC;EACvC;AACF,CACF,CAAC;AAED,MAAMC,YAAY,GAAGlB,WAAW,CAAC;EAC/BmB,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACR;IACAC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACC,OAAO;IAC7C;IACAC,YAAY,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAKD,KAAK,CAACI,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,EAAE,KAAKL,MAAM,CAACC,OAAO;EACxF,CAAC;EACDK,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC9B,SAAS,CAAC+B,SAAS,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC/C;MACAD,KAAK,CAACW,IAAI,CAACV,MAAM,CAACC,OAAO,CAAC;IAC5B,CAAC,CAAC,CACDO,OAAO,CAAC9B,SAAS,CAACiC,QAAQ,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC9C;MACAY,OAAO,CAACpB,KAAK,CAAC,uBAAuB,EAAEQ,MAAM,CAACC,OAAO,CAAC;IACxD,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,UAAU;EAAEI;AAAa,CAAC,GAAGR,YAAY,CAACmB,OAAO;AAChE,eAAenB,YAAY,CAACoB,OAAO"},"metadata":{},"sourceType":"module"}