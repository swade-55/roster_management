{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociateRoster.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport AssociateCard from \"./AssociateCard\";\nimport { Card } from \"semantic-ui-react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteWorker } from '../features/workersSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssociateRoster() {\n  _s();\n  const dispatch = useDispatch();\n  const workers = useSelector(state => state.workers);\n  const handleDelete = workerId => {\n    dispatch(deleteWorker(workerId));\n  };\n  const selectors = workers.filter(selector => selector.job_class == 'Selector');\n  const workersList = workers.map(worker => {\n    return /*#__PURE__*/_jsxDEV(AssociateCard, {\n      worker: worker,\n      handleDelete: handleDelete\n    }, worker.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  });\n  const letForkLifts = workers.filter(forklift => forklift.job_class == 'Putaway Forklift');\n  const letForkLiftCards = forkLifts.map(forklift => {\n    return /*#__PURE__*/_jsxDEV(AssociateCard, {\n      worker: forklift,\n      handleDelete: handleDelete\n    }, forklift.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Selectors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n      itemsPerRow: 4,\n      children: workersList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forklifts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n      itemsPerRow: 4,\n      children: forkLiftCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(AssociateRoster, \"0FnBNVi8NP9yKuecl1xu9VT23QM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AssociateRoster;\nexport default AssociateRoster;\nvar _c;\n$RefreshReg$(_c, \"AssociateRoster\");","map":{"version":3,"names":["React","AssociateCard","Card","useDispatch","useSelector","deleteWorker","jsxDEV","_jsxDEV","AssociateRoster","_s","dispatch","workers","state","handleDelete","workerId","selectors","filter","selector","job_class","workersList","map","worker","id","fileName","_jsxFileName","lineNumber","columnNumber","letForkLifts","forklift","letForkLiftCards","forkLifts","children","Group","itemsPerRow","forkLiftCards","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociateRoster.js"],"sourcesContent":["import React from \"react\";\nimport AssociateCard from \"./AssociateCard\";\nimport { Card } from \"semantic-ui-react\";\nimport {useDispatch,useSelector} from 'react-redux'\nimport {deleteWorker} from '../features/workersSlice'\n\nfunction AssociateRoster() {\n  const dispatch = useDispatch();\n  const workers = useSelector((state) => state.workers);\n  const handleDelete = (workerId)=>{\n    dispatch(deleteWorker(workerId))\n  }\n  const selectors = workers.filter(selector=>selector.job_class=='Selector')\n  const workersList = workers.map(worker=>{\n        return <AssociateCard key={worker.id} worker={worker} handleDelete={handleDelete}/>\n    })\n  const letForkLifts = workers.filter(forklift=>forklift.job_class=='Putaway Forklift')\n  const letForkLiftCards = forkLifts.map(forklift=>{\n    return <AssociateCard key = {forklift.id} worker={forklift} handleDelete={handleDelete}/>\n  })\n\n\n\n  return (\n    <div>\n    <h2>Selectors</h2>\n    <Card.Group itemsPerRow={4}>\n      {workersList}\n    </Card.Group>\n    <h2>Forklifts</h2>\n    <Card.Group itemsPerRow={4}>\n      {forkLiftCards}\n    </Card.Group>\n    </div>\n  );\n}\n\nexport default AssociateRoster;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAAQC,WAAW,EAACC,WAAW,QAAO,aAAa;AACnD,SAAQC,YAAY,QAAO,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,OAAO,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EACrD,MAAME,YAAY,GAAIC,QAAQ,IAAG;IAC/BJ,QAAQ,CAACL,YAAY,CAACS,QAAQ,CAAC,CAAC;EAClC,CAAC;EACD,MAAMC,SAAS,GAAGJ,OAAO,CAACK,MAAM,CAACC,QAAQ,IAAEA,QAAQ,CAACC,SAAS,IAAE,UAAU,CAAC;EAC1E,MAAMC,WAAW,GAAGR,OAAO,CAACS,GAAG,CAACC,MAAM,IAAE;IAClC,oBAAOd,OAAA,CAACN,aAAa;MAAiBoB,MAAM,EAAEA,MAAO;MAACR,YAAY,EAAEA;IAAa,GAAtDQ,MAAM,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8C,CAAC;EACvF,CAAC,CAAC;EACJ,MAAMC,YAAY,GAAGhB,OAAO,CAACK,MAAM,CAACY,QAAQ,IAAEA,QAAQ,CAACV,SAAS,IAAE,kBAAkB,CAAC;EACrF,MAAMW,gBAAgB,GAAGC,SAAS,CAACV,GAAG,CAACQ,QAAQ,IAAE;IAC/C,oBAAOrB,OAAA,CAACN,aAAa;MAAqBoB,MAAM,EAAEO,QAAS;MAACf,YAAY,EAAEA;IAAa,GAA1De,QAAQ,CAACN,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgD,CAAC;EAC3F,CAAC,CAAC;EAIF,oBACEnB,OAAA;IAAAwB,QAAA,gBACAxB,OAAA;MAAAwB,QAAA,EAAI;IAAS;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA,CAACL,IAAI,CAAC8B,KAAK;MAACC,WAAW,EAAE,CAAE;MAAAF,QAAA,EACxBZ;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACbnB,OAAA;MAAAwB,QAAA,EAAI;IAAS;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA,CAACL,IAAI,CAAC8B,KAAK;MAACC,WAAW,EAAE,CAAE;MAAAF,QAAA,EACxBG;IAAa;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACjB,EAAA,CA7BQD,eAAe;EAAA,QACLL,WAAW,EACZC,WAAW;AAAA;AAAA+B,EAAA,GAFpB3B,eAAe;AA+BxB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}