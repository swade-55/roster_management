{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociateRoster.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport AssociateCard from \"./AssociateCard\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteWorker } from '../features/workersSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssociateRoster() {\n  _s();\n  const dispatch = useDispatch();\n  const workers = useSelector(state => state.workers);\n  const handleDelete = workerId => {\n    dispatch(deleteWorker(workerId));\n  };\n\n  // Group workers by jobclass_id, assuming jobClassName is included in the worker object\n  const groupedWorkers = workers.workers.reduce((acc, worker) => {\n    const {\n      jobclass_id,\n      jobClassName\n    } = worker;\n    if (!acc[jobclass_id]) {\n      acc[jobclass_id] = {\n        jobClassName,\n        workers: []\n      };\n    }\n    acc[jobclass_id].workers.push(worker);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(groupedWorkers).map(_ref => {\n      let [jobclass_id, group] = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold mb-5\",\n          children: group.jobClassName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-4 gap-4\",\n          children: group.workers.map(worker => /*#__PURE__*/_jsxDEV(AssociateCard, {\n            worker: worker,\n            handleDelete: () => handleDelete(worker.id)\n          }, worker.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, jobclass_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(AssociateRoster, \"0FnBNVi8NP9yKuecl1xu9VT23QM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AssociateRoster;\nexport default AssociateRoster;\nvar _c;\n$RefreshReg$(_c, \"AssociateRoster\");","map":{"version":3,"names":["React","AssociateCard","useDispatch","useSelector","deleteWorker","jsxDEV","_jsxDEV","AssociateRoster","_s","dispatch","workers","state","handleDelete","workerId","groupedWorkers","reduce","acc","worker","jobclass_id","jobClassName","push","children","Object","entries","map","_ref","group","className","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociateRoster.js"],"sourcesContent":["import React from \"react\";\nimport AssociateCard from \"./AssociateCard\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteWorker } from '../features/workersSlice';\n\nfunction AssociateRoster() {\n  const dispatch = useDispatch();\n  const workers = useSelector((state) => state.workers);\n  const handleDelete = (workerId) => {\n    dispatch(deleteWorker(workerId));\n  };\n\n  // Group workers by jobclass_id, assuming jobClassName is included in the worker object\n  const groupedWorkers = workers.workers.reduce((acc, worker) => {\n    const { jobclass_id, jobClassName } = worker;\n    if (!acc[jobclass_id]) {\n      acc[jobclass_id] = { jobClassName, workers: [] };\n    }\n    acc[jobclass_id].workers.push(worker);\n    return acc;\n  }, {});\n\n  return (\n    <div>\n      {Object.entries(groupedWorkers).map(([jobclass_id, group]) => (\n        <div key={jobclass_id}>\n          <h2 className=\"text-3xl font-bold mb-5\">{group.jobClassName}</h2>\n          <div className=\"grid grid-cols-4 gap-4\">\n            {group.workers.map(worker => (\n              <AssociateCard key={worker.id} worker={worker} handleDelete={() => handleDelete(worker.id)} />\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default AssociateRoster;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,OAAO,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EACrD,MAAME,YAAY,GAAIC,QAAQ,IAAK;IACjCJ,QAAQ,CAACL,YAAY,CAACS,QAAQ,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGJ,OAAO,CAACA,OAAO,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;IAC7D,MAAM;MAAEC,WAAW;MAAEC;IAAa,CAAC,GAAGF,MAAM;IAC5C,IAAI,CAACD,GAAG,CAACE,WAAW,CAAC,EAAE;MACrBF,GAAG,CAACE,WAAW,CAAC,GAAG;QAAEC,YAAY;QAAET,OAAO,EAAE;MAAG,CAAC;IAClD;IACAM,GAAG,CAACE,WAAW,CAAC,CAACR,OAAO,CAACU,IAAI,CAACH,MAAM,CAAC;IACrC,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,oBACEV,OAAA;IAAAe,QAAA,EACGC,MAAM,CAACC,OAAO,CAACT,cAAc,CAAC,CAACU,GAAG,CAACC,IAAA;MAAA,IAAC,CAACP,WAAW,EAAEQ,KAAK,CAAC,GAAAD,IAAA;MAAA,oBACvDnB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAIqB,SAAS,EAAC,yBAAyB;UAAAN,QAAA,EAAEK,KAAK,CAACP;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjEzB,OAAA;UAAKqB,SAAS,EAAC,wBAAwB;UAAAN,QAAA,EACpCK,KAAK,CAAChB,OAAO,CAACc,GAAG,CAACP,MAAM,iBACvBX,OAAA,CAACL,aAAa;YAAiBgB,MAAM,EAAEA,MAAO;YAACL,YAAY,EAAEA,CAAA,KAAMA,YAAY,CAACK,MAAM,CAACe,EAAE;UAAE,GAAvEf,MAAM,CAACe,EAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgE,CAC9F;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GANEb,WAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOhB,CAAC;IAAA,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CA/BQD,eAAe;EAAA,QACLL,WAAW,EACZC,WAAW;AAAA;AAAA8B,EAAA,GAFpB1B,eAAe;AAiCxB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}