{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunk action for adding a worker\nexport const addWorker = createAsyncThunk('workers/addWorker', async (workerData, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  console.log('dispatching data', workerData);\n  try {\n    const response = await fetch('http://localhost:5555/associate_metrics', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(workerData)\n    });\n    if (!response.ok) throw new Error('Server error!');\n    return await response.json();\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const fetchWorkers = createAsyncThunk('workers/fetchWorkers', async (_, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const response = await fetch('http://localhost:5555/associate_metrics');\n    if (!response.ok) throw new Error('Server error!');\n    return await response.json();\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst workersSlice = createSlice({\n  name: 'workers',\n  initialState: [],\n  reducers: {\n    // Reducer to set workers\n    setWorkers: (state, action) => action.payload,\n    // Reducer to delete a worker\n    deleteWorker: (state, action) => state.filter(worker => worker.id !== action.payload),\n    updateWorker: (state, action) => {\n      const index = state.findIndex(worker => worker.id === action.payload.id);\n      if (index !== -1) {\n        state[index] = {\n          ...state[index],\n          ...action.payload\n        };\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(addWorker.fulfilled, (state, action) => {\n      // Add the new worker to the state\n      state.push(action.payload);\n    }).addCase(addWorker.rejected, (state, action) => {\n      // Handle the case where adding a worker fails\n\n      console.error('Failed to add worker:', action.payload);\n    }).addCase(fetchWorkers.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  }\n});\nexport const {\n  setWorkers,\n  deleteWorker,\n  updateWorker\n} = workersSlice.actions;\nexport default workersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","addWorker","workerData","_ref","rejectWithValue","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","message","fetchWorkers","_","_ref2","workersSlice","name","initialState","reducers","setWorkers","state","action","payload","deleteWorker","filter","worker","id","updateWorker","index","findIndex","extraReducers","builder","addCase","fulfilled","push","rejected","actions","reducer"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/features/workersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunk action for adding a worker\nexport const addWorker = createAsyncThunk(\n  'workers/addWorker',\n  async (workerData, { rejectWithValue }) => {\n    console.log('dispatching data',workerData)\n    try {\n      const response = await fetch('http://localhost:5555/associate_metrics', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(workerData),\n});\n\n      if (!response.ok) throw new Error('Server error!');\n      return await response.json();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const fetchWorkers = createAsyncThunk(\n  'workers/fetchWorkers',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await fetch('http://localhost:5555/associate_metrics');\n      if (!response.ok) throw new Error('Server error!');\n      return await response.json();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst workersSlice = createSlice({\n  name: 'workers',\n  initialState: [],\n  reducers: {\n    // Reducer to set workers\n    setWorkers: (state, action) => action.payload,\n    // Reducer to delete a worker\n    deleteWorker: (state, action) => state.filter((worker) => worker.id !== action.payload),\n    updateWorker: (state, action) => {\n      const index = state.findIndex(worker => worker.id === action.payload.id);\n      if (index !== -1) {\n        state[index] = { ...state[index], ...action.payload };\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(addWorker.fulfilled, (state, action) => {\n        // Add the new worker to the state\n        state.push(action.payload);\n      })\n      .addCase(addWorker.rejected, (state, action) => {\n        // Handle the case where adding a worker fails\n        \n        console.error('Failed to add worker:', action.payload);\n      })\n      .addCase(fetchWorkers.fulfilled, (state, action) => {\n        return action.payload;\n      });\n  },\n});\n\nexport const { setWorkers, deleteWorker, updateWorker } = workersSlice.actions;\nexport default workersSlice.reducer;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}