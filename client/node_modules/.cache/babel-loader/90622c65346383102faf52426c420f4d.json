{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/ScheduleForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, Table } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSchedule } from '../features/scheduleBuildSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScheduleForm() {\n  _s();\n  const [inputValues, setInputValues] = useState({\n    // Initial values for all days of the week\n    Monday: 0,\n    Tuesday: 0,\n    Wednesday: 0,\n    Thursday: 0,\n    Friday: 0,\n    Saturday: 0,\n    Sunday: 0\n  });\n  const dispatch = useDispatch();\n  // Use optional chaining and nullish coalescing operator to provide a default state\n  const scheduleData = useSelector(state => {\n    var _state$schedule$data;\n    return (_state$schedule$data = state.schedule.data) !== null && _state$schedule$data !== void 0 ? _state$schedule$data : {};\n  });\n  useEffect(() => {\n    // Dispatch the action to fetch the schedule with the initial state\n    dispatch(fetchSchedule(inputValues));\n  }, [dispatch, inputValues]);\n  const handleSliderChange = (name, value) => {\n    setInputValues({\n      ...inputValues,\n      [name]: value\n    });\n  };\n  const handleSubmit = () => {\n    // Dispatch the action to fetch the schedule with the updated state\n    dispatch(fetchSchedule(inputValues));\n  };\n  function ScheduleTable(_ref) {\n    let {\n      schedule\n    } = _ref;\n    const days = Object.keys(inputValues);\n    return /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Required Staff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: days.map(day => /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: schedule[day]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: Object.keys(inputValues).map(day => /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [day, \" Needs (heads)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: 0,\n          max: 100,\n          value: inputValues[day],\n          onChange: e => handleSliderChange(day, parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Current: \", inputValues[day]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      primary: true,\n      children: \"Generate Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), scheduleData && /*#__PURE__*/_jsxDEV(ScheduleTable, {\n      schedule: scheduleData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ScheduleForm, \"Qs/SH7QT9sBlLDxhNI2VuSTmxnU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ScheduleForm;\nexport default ScheduleForm;\nvar _c;\n$RefreshReg$(_c, \"ScheduleForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Table","useDispatch","useSelector","fetchSchedule","jsxDEV","_jsxDEV","ScheduleForm","_s","inputValues","setInputValues","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","dispatch","scheduleData","state","_state$schedule$data","schedule","data","handleSliderChange","name","value","handleSubmit","ScheduleTable","_ref","days","Object","keys","celled","children","Header","Row","HeaderCell","fileName","_jsxFileName","lineNumber","columnNumber","Body","map","day","Cell","Field","type","min","max","onChange","e","parseInt","target","onClick","primary","_c","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/ScheduleForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form, Table } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSchedule } from '../features/scheduleBuildSlice';\n\nfunction ScheduleForm() {\n  const [inputValues, setInputValues] = useState({\n    // Initial values for all days of the week\n    Monday: 0,\n    Tuesday: 0,\n    Wednesday: 0,\n    Thursday: 0,\n    Friday: 0,\n    Saturday: 0,\n    Sunday: 0\n  });\n\n  const dispatch = useDispatch();\n  // Use optional chaining and nullish coalescing operator to provide a default state\n  const scheduleData = useSelector((state) => state.schedule.data ?? {});\n\n  useEffect(() => {\n    // Dispatch the action to fetch the schedule with the initial state\n    dispatch(fetchSchedule(inputValues));\n  }, [dispatch, inputValues]);\n\n  const handleSliderChange = (name, value) => {\n    setInputValues({ ...inputValues, [name]: value });\n  };\n\n  const handleSubmit = () => {\n    // Dispatch the action to fetch the schedule with the updated state\n    dispatch(fetchSchedule(inputValues));\n  };\n\n  function ScheduleTable({ schedule }) {\n    const days = Object.keys(inputValues);\n\n    return (\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Day</Table.HeaderCell>\n            <Table.HeaderCell>Required Staff</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {days.map((day) => (\n            <Table.Row key={day}>\n              <Table.Cell>{day}</Table.Cell>\n              <Table.Cell>{schedule[day]}</Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    );\n  }\n\n  return (\n    <div>\n      <Form>\n        {Object.keys(inputValues).map((day) => (\n          <Form.Field key={day}>\n            <label>{day} Needs (heads)</label>\n            <input\n              type='range'\n              min={0}\n              max={100}\n              value={inputValues[day]}\n              onChange={(e) => handleSliderChange(day, parseInt(e.target.value))}\n            />\n            <div>Current: {inputValues[day]}</div>\n          </Form.Field>\n        ))}\n      </Form>\n      <Button onClick={handleSubmit} primary>\n        Generate Schedule\n      </Button>\n      {scheduleData && <ScheduleTable schedule={scheduleData} />}\n    </div>\n  );\n}\n\nexport default ScheduleForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}