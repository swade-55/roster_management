{"ast":null,"code":"var _jsxFileName = \"/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociateForm.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Formik, Form, useField } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addWorker } from '../features/workersSlice';\n\n// Define the MySelect component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MySelect = _ref => {\n  _s();\n  let {\n    label,\n    ...props\n  } = _ref;\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 37\n    }, this) : null]\n  }, void 0, true);\n};\n\n// Define the jobClasses array\n_s(MySelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n_c = MySelect;\nconst jobClasses = [{\n  id: 1,\n  name: 'Putaway Forklift'\n}, {\n  id: 2,\n  name: 'Selector'\n}\n// ... other job classes ...\n];\n\n// Custom Input component for Formik\nconst MyTextInput = _ref2 => {\n  _s2();\n  let {\n    label,\n    ...props\n  } = _ref2;\n  const [field] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(MyTextInput, \"z3HN8a8tvzohqoKT3WnQcNgd46I=\", false, function () {\n  return [useField];\n});\n_c2 = MyTextInput;\nfunction AssociateForm() {\n  _s3();\n  const dispatch = useDispatch();\n  const [selectedJobClass, setSelectedJobClass] = useState('');\n  const handleJobClassChange = (setFieldValue, value) => {\n    setFieldValue(\"jobClass_id\", value);\n    setSelectedJobClass(value);\n  };\n\n  // Initial values for the form\n  const initialValues = {\n    firstName: '',\n    lastName: '',\n    uptime: '',\n    casesPerHour: '',\n    palletsPerHour: '',\n    attendance: '',\n    jobClass_id: '' // Make sure this is included\n  };\n\n  // onSubmit function with Redux dispatch\n  const onSubmit = (values, _ref3) => {\n    let {\n      setSubmitting,\n      resetForm\n    } = _ref3;\n    console.log('Attempting to submit form with values:', values);\n\n    // Dispatching the action with form data\n    dispatch(addWorker(values)).unwrap().then(addedWorker => {\n      console.log('Form submission successful, added worker:', addedWorker);\n      resetForm();\n    }).catch(error => {\n      console.error('Form submission error:', error);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add an Associate!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues\n      // ... validation schema and onSubmit function ...\n      ,\n      onSubmit: onSubmit,\n      children: _ref4 => {\n        let {\n          isSubmitting,\n          setFieldValue,\n          values\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(MySelect, {\n            label: \"Job Class\",\n            name: \"jobClass_id\",\n            onChange: e => handleJobClassChange(setFieldValue, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a Job Class\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), jobClasses.map(jobClass => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: jobClass.name,\n              children: jobClass.name\n            }, jobClass.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), selectedJobClass === 'Putaway Forklift' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n              label: \"First Name\",\n              name: \"firstName\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n              label: \"Last Name\",\n              name: \"lastName\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n              label: \"Uptime\",\n              name: \"uptime\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n              label: \"Attendance\",\n              name: \"attendance\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s3(AssociateForm, \"nZA66Ce/BLsg7veR7zan8ZDFY58=\", false, function () {\n  return [useDispatch];\n});\n_c3 = AssociateForm;\nexport default AssociateForm;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MySelect\");\n$RefreshReg$(_c2, \"MyTextInput\");\n$RefreshReg$(_c3, \"AssociateForm\");","map":{"version":3,"names":["React","useState","Formik","Form","useField","useDispatch","addWorker","jsxDEV","_jsxDEV","Fragment","_Fragment","MySelect","_ref","_s","label","props","field","meta","children","htmlFor","id","name","fileName","_jsxFileName","lineNumber","columnNumber","touched","error","className","_c","jobClasses","MyTextInput","_ref2","_s2","_c2","AssociateForm","_s3","dispatch","selectedJobClass","setSelectedJobClass","handleJobClassChange","setFieldValue","value","initialValues","firstName","lastName","uptime","casesPerHour","palletsPerHour","attendance","jobClass_id","onSubmit","values","_ref3","setSubmitting","resetForm","console","log","unwrap","then","addedWorker","catch","finally","_ref4","isSubmitting","onChange","e","target","map","jobClass","type","disabled","_c3","$RefreshReg$"],"sources":["/home/samuelrcwade/Development/Code/Phase4/roster_management/client/src/components/AssociateForm.js"],"sourcesContent":["import React,{useState} from 'react';\nimport { Formik, Form, useField } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addWorker } from '../features/workersSlice';\n\n\n// Define the MySelect component\nconst MySelect = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <select {...field} {...props} />\n      {meta.touched && meta.error ? <div className=\"error\">{meta.error}</div> : null}\n    </>\n  );\n};\n\n// Define the jobClasses array\nconst jobClasses = [\n  { id: 1, name: 'Putaway Forklift' },\n  { id: 2, name: 'Selector' },\n  // ... other job classes ...\n];\n\n// Custom Input component for Formik\nconst MyTextInput = ({ label, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input {...field} {...props} />\n    </>\n  );\n};\n\nfunction AssociateForm() {\n  const dispatch = useDispatch();\n  const [selectedJobClass,setSelectedJobClass] = useState('')\n\n  const handleJobClassChange = (setFieldValue,value) =>{\n    setFieldValue(\"jobClass_id\",value);\n    setSelectedJobClass(value);\n  }\n\n  // Initial values for the form\n  const initialValues = {\n    firstName: '',\n    lastName: '',\n    uptime: '',\n    casesPerHour: '',\n    palletsPerHour: '',\n    attendance: '',\n    jobClass_id: '', // Make sure this is included\n  };\n\n  // onSubmit function with Redux dispatch\n  const onSubmit = (values, { setSubmitting, resetForm }) => {\n    console.log('Attempting to submit form with values:', values);\n    \n    // Dispatching the action with form data\n    dispatch(addWorker(values))\n      .unwrap()\n      .then(addedWorker => {\n        console.log('Form submission successful, added worker:', addedWorker);\n        resetForm();\n      })\n      .catch(error => {\n        console.error('Form submission error:', error);\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <div>\n      <h3>Add an Associate!</h3>\n      <Formik\n        initialValues={initialValues}\n        // ... validation schema and onSubmit function ...\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, setFieldValue, values }) => (\n          <Form>\n            <MySelect label=\"Job Class\" name=\"jobClass_id\" onChange={(e) => handleJobClassChange(setFieldValue, e.target.value)}>\n              <option value=\"\">Select a Job Class</option>\n              {jobClasses.map(jobClass => (\n                <option key={jobClass.id} value={jobClass.name}>\n                  {jobClass.name}\n                </option>\n              ))}\n            </MySelect>\n\n            {selectedJobClass === 'Putaway Forklift' && (\n              <>\n                <MyTextInput label=\"First Name\" name=\"firstName\" type=\"text\" />\n                <MyTextInput label=\"Last Name\" name=\"lastName\" type=\"text\" />\n                <MyTextInput label=\"Uptime\" name=\"uptime\" type=\"text\" />\n                <MyTextInput label=\"Attendance\" name=\"attendance\" type=\"text\" />\n              </>\n            )}\n            \n            {/* Conditional rendering for other job classes can be added here */}\n            \n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default AssociateForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}